제목 <h>
굵게 <strong>
밑줄 <u>
줄바꿈 <br>
★ 단락 그룹핑 </p> <p>
   p태그를 통해서 단락의 경계를 분명히 하면서
   CSS로 p태그의 디자인을 자유롭게 변경할 수 있기 때문에 br 태그 보다 p 태그가 더 좋은 선택
target="_blank" 새창에서 링크 건 페이지 열리기
메뉴 <li> 
메뉴구분 <ul> 
  ul은 unordered list의 약자이고, 순서없음
  ol은 ordered list의 약자랍니다. 순서대로
※ 본문 <body>
※ 본문설명 <head>

id 학번 같은것, id는 해당 문서에서 한번밖에 사용할 수 없음
class 반(그룹핑)
HTML로서 만들어졌다는 것 <!doctype html>
a는 anchor
href는 HyperText Reference
<table>태그
   <tr>테이블에서 열을 구분
   <th>각 열의 제목, 내용은 굵은글씨에 가운데정렬
   <td>테이블의 열을 각각의 셀로 나눔
   <caption>테이블 상단에 제목이나 짧은 설명
.saw 소스코드에 있는 saw클래스
동일한 level 일 때는 나중에 쓴 선택자가 우선,다른 level 일 때는 id > class > tag 순
<div>= Division(분할, 나누기)-> html에서 웹 페이지의 내용(텍스트, 이미지, 머리글 등)을 구분
                              주로 여러 요소들의 스타일을 한 번에 적용하기 위해 사용
<span> 주로 텍스트의 특정부분에 따로 스타일을 적용
<iframe> 웹 안에 또 다른 웹 페이지를 삽입

<header> HTML문서나 섹션에 대한 헤더
<nav> HTML문서의 탐색링크를 정의
<section> HTML문서에서 섹션
<article> HTML문서에서 독립적인 하나의 글
<aside>	HTML문서에서 페이지 부분 이외의 콘텐츠
<footer> HTML문서나 섹션부분에 대한 푸터

form 요소의 전달 방식
    GET 방식은 주소에 데이터(data)를 추가하여 전달하는 방식입니다.
    데이터가 주소 입력창에 그대로 나타나며, 전송할 수 있는 데이터의 크기 또한 제한적입니다.
    따라서 검색 엔진의 쿼리(query)와 같이 크기가 작고 중요도가 낮은 정보를 보낼 때 주로 사용합니다.

    POST 방식은 데이터(data)를 별도로 첨부하여 전달하는 방식입니다.
    데이터가 외부에 드러나지 않으며, 전송할 수 있는 데이터의 크기 또한 제한이 없습니다.
    따라서 보안성 및 활용성이 GET 방식보다 좋습니다.

대표적인 input 요소의 타입
    텍스트 입력(text)
    비밀번호 입력(password)
    라디오 버튼(radio)
    체크박스(checkbox)
    파일 선택(file)
    선택 입력(select)
    문장 입력(textarea)
    버튼 입력(button)
    전송 버튼(submit)
    필드셋(fieldset) (데이터들을 묶어줘서 표시)

document.write이라는 행위 자체는 html 문서에 결과값을 표시
코드<함수<객체 (객체에 속한 함수는 '메소드')
함수에서 뭔가 가지고오려면 return 필요
